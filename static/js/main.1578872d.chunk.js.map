{"version":3,"sources":["components/UserPasswordTests/ClientPasswordTest.js","components/UserPasswordTests/CarletonPasswordTest.js","components/UserPasswordTests/FacebookPasswordTest.js","components/App/App.js","components/UserPasswordConfirmations/PasswordConfirmation/PasswordConfirmation.js","components/UserPasswordConfirmations/ClientPasswordConfirmation.js","components/UserPasswordConfirmations/CarletonPasswordConfirmation.js","components/UserPasswordConfirmations/FacebookPasswordConfirmation.js","components/UserPasswordTests/PasswordTest/PasswordTest.js","index.js"],"names":["ClientPasswordTest","react_default","a","createElement","UserPasswordTests_PasswordTest_PasswordTest","client","hashedPassword","this","props","storeAttempts","Component","CarletonPasswordTest","FacebookPasswordTest","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","db","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","attemptDetails","dataSaved","userId","Math","floor","random","state","currentScreen","emailHashedPassword","carletonHashedPassword","facebookHashedPassword","saveDataToFirebase","_this2","console","log","totalLogins","succesfulLogins","failedLogins","totalLoginTime","succesfulLoginTime","failedLoginTime","forEach","attempt","successfulAttempt","time","ref","set","user_id","success","averageLoginTime","averageSuccesfulLoginTime","averageFailedLoginTime","total_logins","successful_logins","failed_logins","average_success_time","average_login_time","average_failed_time","setState","_this3","attemptDetail","push","allScreens","UserPasswordConfirmations_ClientPasswordConfirmation","confirmPassword","saveHashedPassword","bind","UserPasswordConfirmations_CarletonPasswordConfirmation","UserPasswordConfirmations_FacebookPasswordConfirmation","UserPasswordTests_ClientPasswordTest","saveAttempts","UserPasswordTests_CarletonPasswordTest","UserPasswordTests_FacebookPasswordTest","page_header","title","className","wordsApiEndpoint","PasswordConfirmation","handleSubmit","e","preventDefault","form","validateFields","err","values","message","MD5","password","hashed_password","generatePassword","wordsApiHeaders","X-RapidAPI-Key","X-RapidAPI-Host","wordsApiDefaultParams","partOfSpeech","frequencyMin","syllablesMin","syllablesMax","lettersMax","lettersMin","axios","get","headers","params","then","value","data","word","words","rule","callback","setTimeout","Error","fieldsError","_this$props$form","getFieldDecorator","getFieldsError","getFieldError","passwordError","isFieldTouched","row","col","span","card","es_form","onSubmit","Item","validateStatus","help","rules","validator","correctPassword","required","input","placeholder","spellCheck","es_button","type","htmlType","disabled","keys","some","field","WrappedHorizontalLoginForm","Form","create","name","ClientPasswordConfirmation","UserPasswordConfirmations_PasswordConfirmation_PasswordConfirmation","CarletonPasswordConfirmation","FacebookPasswordConfirmation","PasswordTest","_this$props","currentField","getFieldValue","hashedCurrentField","deltaTime","Date","startTime","compareHashedPassword","newAttempts","attempts","currentAttempt","newAttemptDetails","setFields","defineProperty","error","fieldHashedPassword","stringFieldHashedPassword","toString","enc","Hex","_this$state","iconsTracker","index","icon","theme","twoToneColor","style","fontSize","marginLeft","marginRight","key","display","width","justifyContent","__webpack_exports__","react_router_dom","react_router","exact","path","components","ReactDOM","render","components_App_App","document","getElementById"],"mappings":"8UAgBeA,mLAVX,OACEC,EAAAC,EAAAC,cAACC,EAAD,CACEC,OAAO,QACPC,eAAgBC,KAAKC,MAAMF,eAC3BG,cAAeF,KAAKC,MAAMC,uBANDC,aCWlBC,mLAVX,OACEV,EAAAC,EAAAC,cAACC,EAAD,CACEC,OAAO,WACPC,eAAgBC,KAAKC,MAAMF,eAC3BG,cAAeF,KAAKC,MAAMC,uBANCC,aCYpBE,mLAVX,OACEX,EAAAC,EAAAC,cAACC,EAAD,CACEC,OAAO,WACPC,eAAgBC,KAAKC,MAAMF,eAC3BG,cAAeF,KAAKC,MAAMC,uBANCC,sBCsBnCG,gBATa,CACXC,OAAQ,0CACRC,WAAY,2CACZC,YAAa,kDACbC,UAAW,2BACXC,cAAe,uCACfC,kBAAmB,iBAMrB,IAAMC,EAAKP,aAoLIQ,cAjLb,SAAAA,EAAYb,GAAO,IAAAc,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAhB,KAAAc,IACjBC,EAAAC,OAAAE,EAAA,EAAAF,CAAAhB,KAAAgB,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAApB,KAAMC,KACDoB,eAAiB,GACtBN,EAAKO,WAAY,EACjBP,EAAKQ,OAASC,KAAKC,MAAsB,IAAhBD,KAAKE,UAAoB,IAClDX,EAAKY,MAAQ,CACXC,cAAe,EACfC,oBAAqB,GACrBC,uBAAwB,GACxBC,uBAAwB,IATThB,oFAcbf,KAAK2B,MAAMC,eAAiB,IAAM5B,KAAKsB,WACzCtB,KAAKgC,kEAIY,IAAAC,EAAAjC,KACnBA,KAAKsB,WAAY,EACjBY,QAAQC,IAAInC,KAAKqB,gBAEjB,IAAIe,EAAc,EACdC,EAAkB,EAClBC,EAAe,EAEfC,EAAiB,EACjBC,EAAqB,EACrBC,EAAkB,EAEtBzC,KAAKqB,eAAeqB,QAAQ,SAAAC,GAC1B,IAAIC,GAAoB,EACA,YAApBD,EAAQA,SACVN,GAAmB,EACnBG,GAAsBG,EAAQE,OAE9BP,GAAgB,EAChBG,GAAmBE,EAAQE,KAC3BD,GAAoB,GAEtBR,GAAe,EACfG,GAAkBI,EAAQE,KAC1BhC,EAAGiC,IAAI,YAAcb,EAAKV,QAAQwB,IAAI,CACpCC,QAASf,EAAKV,OACdsB,KAAMF,EAAQE,KACdI,QAASL,MAIb,IAAIM,EAAmBX,EAAiBH,EACpCe,EAA4B,EAC5Bd,IACFc,EAA4BX,EAAqBH,GAEnD,IAAIe,EAAyB,EACzBd,IACFc,EAAyBX,EAAkBH,GAG7CzB,EAAGiC,IAAI,aAAe9C,KAAKuB,QAAQwB,IAAI,CACrCC,QAAShD,KAAKuB,OACd8B,aAAcjB,EACdkB,kBAAmBjB,EACnBkB,cAAejB,EACfkB,qBAAsBL,EACtBM,mBAAoBP,EACpBQ,oBAAqBN,yCAIZ,IACHxB,EAAkB5B,KAAK2B,MAAvBC,cACR5B,KAAK2D,SAAS,CACZ/B,cAAeA,EAAgB,+CAIhB7B,GAAgB,IACzB6B,EAAkB5B,KAAK2B,MAAvBC,cACR,OAAQA,GACN,KAAK,EACH5B,KAAK2D,SAAS,CACZ9B,oBAAqB9B,EACrB6B,cAAeA,EAAgB,IAEjC,MACF,KAAK,EACH5B,KAAK2D,SAAS,CACZ7B,uBAAwB/B,EACxB6B,cAAeA,EAAgB,IAEjC,MACF,KAAK,EACH5B,KAAK2D,SAAS,CACZ5B,uBAAwBhC,EACxB6B,cAAeA,EAAgB,0CAQ1BP,GAAgB,IAAAuC,EAAA5D,KAC3BqB,EAAeqB,QAAQ,SAAAmB,GACrBD,EAAKvC,eAAeyC,KAAKD,KAG3B7D,KAAK2D,SAAS,CACZ/B,cAAe5B,KAAK2B,MAAMC,cAAgB,qCAK5C,IAyCMmC,EAAa,CAxCjBrE,EAAAC,EAAAC,cAACoE,EAAD,CACEC,gBAAiBjE,KAAKkE,mBAAmBC,KAAKnE,QAKhDN,EAAAC,EAAAC,cAACwE,EAAD,CACEH,gBAAiBjE,KAAKkE,mBAAmBC,KAAKnE,QAKhDN,EAAAC,EAAAC,cAACyE,EAAD,CACEJ,gBAAiBjE,KAAKkE,mBAAmBC,KAAKnE,QAKhDN,EAAAC,EAAAC,cAAC0E,EAAD,CACEvE,eAAgBC,KAAK2B,MAAME,oBAC3B3B,cAAeF,KAAKuE,aAAaJ,KAAKnE,QAKxCN,EAAAC,EAAAC,cAAC4E,EAAD,CACEzE,eAAgBC,KAAK2B,MAAMG,uBAC3B5B,cAAeF,KAAKuE,aAAaJ,KAAKnE,QAKxCN,EAAAC,EAAAC,cAAC6E,EAAD,CACE1E,eAAgBC,KAAK2B,MAAMI,uBAC3B7B,cAAeF,KAAKuE,aAAaJ,KAAKnE,QAItBN,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,CAAYC,MAAM,aAY9B/C,EAAkB5B,KAAK2B,MAAvBC,cACR,OACElC,EAAAC,EAAAC,cAAA,OAAKgF,UAAU,OACblF,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,CAAYC,MAAO,YAAc3E,KAAKuB,QACnCwC,EAAWnC,YA3KJzB,4GCrBlB,IAAM0E,EAAmB,oCAEnBC,cACJ,SAAAA,EAAY7E,GAAO,IAAAc,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAhB,KAAA8E,IACjB/D,EAAAC,OAAAE,EAAA,EAAAF,CAAAhB,KAAAgB,OAAAG,EAAA,EAAAH,CAAA8D,GAAA1D,KAAApB,KAAMC,KAuFR8E,aAAe,SAAAC,GACbA,EAAEC,iBACFlE,EAAKd,MAAMiF,KAAKC,eAAe,SAACC,EAAKC,GAC9BD,IACHE,IAAQrC,QAAQlC,EAAKd,MAAMH,OAAS,mBACpCiB,EAAKd,MAAMgE,gBAAgBsB,cAAIF,EAAOG,eA1F1CzE,EAAKY,MAAQ,CACX7B,OAAQiB,EAAKd,MAAMH,OACnB0F,SAAU,GACVC,gBAAiB,IAEnB1E,EAAK2E,mBARY3E,kFAWA,IAAAkB,EAAAjC,KACX2F,EAAkB,CACtBC,iBAAkB,qDAClBC,kBAAmB,6BAEjBC,EAAwB,CAC1BpE,OAAQ,OACRqE,aAAc,YACdC,aAAc,IACdC,aAAc,IACdC,aAAc,IACdC,WAAY,IACZC,WAAY,KAEVZ,EAAW,GACa,KAAxBxF,KAAK2B,MAAM6D,WAGfa,IACGC,IAAIzB,EAAmB,UAAW,CACjC0B,QAASZ,EACTa,OAAQV,IAETW,KAAK,SAAAC,GAIJ,OAHAlB,GAAYkB,EAAMC,KAAKC,KAAO,IAE9Bd,EAAsBC,aAAe,OAC9BM,IAAMC,IAAIzB,EAAmB,UAAW,CAC7C0B,QAASZ,EACTa,OAAQV,MAGXW,KAAK,SAAAC,GAIJ,OAHAlB,GAAYkB,EAAMC,KAAKC,KAAO,IAE9Bd,EAAsBC,aAAe,OAC9BM,IAAMC,IAAIzB,EAAmB,UAAW,CAC7C0B,QAASZ,EACTa,OAAQV,MAGXW,KAAK,SAAAC,GAIJ,OAHAlB,GAAYkB,EAAMC,KAAKC,KAAO,IAE9Bd,EAAsBC,aAAe,YAC9BM,IAAMC,IAAIzB,EAAmB,UAAW,CAC7C0B,QAASZ,EACTa,OAAQV,MAGXW,KAAK,SAAAC,GAIJ,OAHAlB,GAAYkB,EAAMC,KAAKC,KAAO,IAE9Bd,EAAsBC,aAAe,OAC9BM,IAAMC,IAAIzB,EAAmB,UAAW,CAC7C0B,QAASZ,EACTa,OAAQV,MAGXW,KAAK,SAAAC,GACJlB,GAAYkB,EAAMC,KAAKC,KACvB3E,EAAK0B,SAAS,CACZ6B,SAAUA,EACVC,gBAAiBF,cAAIC,GAAUqB,UAIrC7G,KAAK2D,SAAS,CACZ6B,SAAUA,EACVC,gBAAiBF,cAAIC,GAAUqB,qDAKjC7G,KAAKC,MAAMiF,KAAKC,yDAaF2B,EAAMJ,EAAOK,GAAU,IAAAnD,EAAA5D,KAChC0G,EAGHM,WAAW,WACLN,IAAU9C,EAAKjC,MAAM6D,SACvBuB,EAAS,CAAC,IAAIE,MAAM,2BAEpBF,KAED,KARHA,qCAYK,IAvHQG,EAuHRC,EAMHnH,KAAKC,MAAMiF,KAJbkC,EAFKD,EAELC,kBACAC,EAHKF,EAGLE,eACAC,EAJKH,EAILG,cAIIC,GACJC,EATKL,EAKLK,gBAIe,aAAeF,EAAc,YAEtCxH,EAAWE,KAAK2B,MAAhB7B,OACR,OACEJ,EAAAC,EAAAC,cAAA,OAAKgF,UAAU,wBACblF,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,CAAYC,MAAO,qBAAuB7E,GACxCJ,EAAAC,EAAAC,cAAC6H,EAAA,EAAD,CAAK7C,UAAU,gBACblF,EAAAC,EAAAC,cAAC8H,EAAA,EAAD,CAAKC,KAAM,IACTjI,EAAAC,EAAAC,cAACgI,EAAA,EAAD,CAAMjD,MAAO7E,EAAS,cAAgBE,KAAK2B,MAAM6D,UAC/C9F,EAAAC,EAAAC,cAACiI,EAAA,EAAD,CAAMC,SAAU9H,KAAK+E,cACnBrF,EAAAC,EAAAC,cAACiI,EAAA,EAAKE,KAAN,CACEC,eAAgBT,EAAgB,QAAU,GAC1CU,KAAMV,GAAiB,IAEtBH,EAAkB,WAAY,CAC7Bc,MAAO,CACL,CACE5C,QAAS,yBACT6C,UAAWnI,KAAKoI,gBAAgBjE,KAAKnE,OAEvC,CACEqI,UAAU,EACV/C,QAAS,gCARd8B,CAWE1H,EAAAC,EAAAC,cAAC0I,EAAA,EAAD,CAAOC,YAAY,WAAWC,WAAW,YAE9C9I,EAAAC,EAAAC,cAACiI,EAAA,EAAKE,KAAN,KACErI,EAAAC,EAAAC,cAAC6I,EAAA,EAAD,CACEC,KAAK,UACLC,SAAS,SACTC,UA/JH1B,EA+JuBG,IA9JjCrG,OAAO6H,KAAK3B,GAAa4B,KAAK,SAAAC,GAAK,OAAI7B,EAAY6B,OA2JxC,yBAtJe5I,aA4KpB6I,EAJoBC,IAAKC,OAAO,CAAEC,KAAM,oBAApBF,CACjCnE,GCrKasE,mLATX,OACE1J,EAAAC,EAAAC,cAACyJ,EAAD,CACEvJ,OAAO,QACPmE,gBAAiBjE,KAAKC,MAAMgE,yBALK9D,aCW1BmJ,mLATX,OACE5J,EAAAC,EAAAC,cAACyJ,EAAD,CACEvJ,OAAO,WACPmE,gBAAiBjE,KAAKC,MAAMgE,yBALO9D,aCW5BoJ,mLATX,OACE7J,EAAAC,EAAAC,cAACyJ,EAAD,CACEvJ,OAAO,WACPmE,gBAAiBjE,KAAKC,MAAMgE,yBALO9D,yCCcrCqJ,cACJ,SAAAA,EAAYvJ,GAAO,IAAAc,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAhB,KAAAwJ,IACjBzI,EAAAC,OAAAE,EAAA,EAAAF,CAAAhB,KAAAgB,OAAAG,EAAA,EAAAH,CAAAwI,GAAApI,KAAApB,KAAMC,KA0BR8E,aAAe,SAAAC,GACbA,EAAEC,iBADgB,IAAAwE,EAEO1I,EAAKd,MAAtBH,EAFU2J,EAEV3J,OAAQoF,EAFEuE,EAEFvE,KACVwE,EAAexE,EAAKyE,cAAc,YAClCC,EAAqBrE,cAAImE,GAEzBG,EADU,IAAIC,KACQ/I,EAAKgJ,UACjC,GAAKhJ,EAAKiJ,sBAAsBJ,GAkChC1E,EAAKC,eAAe,SAACC,EAAKC,GACxB,IAAKD,EAAK,CACR,IAAI6E,EAAclJ,EAAKY,MAAMuI,SAC7BD,EAAYlJ,EAAKY,MAAMwI,gBAAkB,EAEzC,IAAIC,EAAoBrJ,EAAKY,MAAMN,eACnC+I,EAAkBtG,KAAK,CACrBnB,QAAS,UACTE,KAAMgH,IAGR9I,EAAK4C,SAAS,CACZuG,SAAUD,EACVE,eAAgBpJ,EAAKY,MAAMwI,eAAiB,EAC5C9I,eAAgB+I,IAElB9E,IAAQrC,QAAQnD,EAAS,qBAfjB,IAgBAI,EAAkBa,EAAKd,MAAvBC,cACAmB,EAAmBN,EAAKY,MAAxBN,eACR2F,WAAW,WACT9G,EAAcmB,IACb,YAvDP,CACEN,EAAKd,MAAMiF,KAAKmF,UAAhBrJ,OAAAsJ,EAAA,EAAAtJ,CAAA,GAEG,WAAa,CAAE0F,MAAO,MAGzBpB,IAAQiF,MAAM,kBAEd,IAAIN,EAAclJ,EAAKY,MAAMuI,SAC7BD,EAAYlJ,EAAKY,MAAMwI,iBAAmB,EAE1C,IAAIC,EAAoBrJ,EAAKY,MAAMN,eAWnC,GAVA+I,EAAkBtG,KAAK,CACrBnB,QAAS,UACTE,KAAMgH,IAER9I,EAAK4C,SAAS,CACZuG,SAAUD,EACVE,eAAgBpJ,EAAKY,MAAMwI,eAAiB,EAC5C9I,eAAgB+I,IAGdrJ,EAAKY,MAAMwI,gBAAkB,EAAG,KAC1BjK,EAAkBa,EAAKd,MAAvBC,cACAmB,EAAmBN,EAAKY,MAAxBN,eACR2F,WAAW,WACT9G,EAAcmB,IACb,KAGLN,EAAKgJ,UAAY,IAAID,OA9DvB/I,EAAKY,MAAQ,CACX7B,OAAQiB,EAAKd,MAAMH,OACnBC,eAAgBgB,EAAKd,MAAMF,eAC3BoK,eAAgB,EAChBD,SAAU,CAAC,EAAG,EAAG,GACjB7I,eAAgB,IAPDN,mFAajBf,KAAKC,MAAMiF,KAAKC,iBAChBnF,KAAK+J,UAAY,IAAID,mDAGDU,GAAqB,IACjCzK,EAAmBC,KAAKC,MAAxBF,eACF0K,EAA4BD,EAAoBE,SAASC,MAAIC,KAEnE,OAD6B7K,EAAe2K,SAASC,MAAIC,OAC5BH,mCAyEtB,IAnGQvD,EAmGRC,EAMHnH,KAAKC,MAAMiF,KAJbkC,EAFKD,EAELC,kBACAC,EAHKF,EAGLE,eACAC,EAJKH,EAILG,cAIIC,GACJC,EATKL,EAKLK,gBAIe,aAAeF,EAAc,YATvCuD,EAUsB7K,KAAK2B,MAA1B7B,EAVD+K,EAUC/K,OAAQoK,EAVTW,EAUSX,SAEZY,EAAe,GAsDnB,OApDAZ,EAASxH,QAAQ,SAACC,EAASoI,GACzB,OAAQpI,GACN,KAAM,EACJmI,EAAaC,GACXrL,EAAAC,EAAAC,cAACoL,EAAA,EAAD,CACEtC,KAAK,eACLuC,MAAM,UACNC,aAAa,UACbC,MAAO,CACLC,SAAU,OACVC,WAAY,MACZC,YAAa,QAEfC,IAAKR,IAGT,MAEF,KAAK,EACHD,EAAaC,GACXrL,EAAAC,EAAAC,cAACoL,EAAA,EAAD,CACEtC,KAAK,eACLyC,MAAO,CACLC,SAAU,OACVC,WAAY,MACZC,YAAa,QAEfC,IAAKR,IAGT,MAEF,KAAK,EACHD,EAAaC,GACXrL,EAAAC,EAAAC,cAACoL,EAAA,EAAD,CACEtC,KAAK,eACLuC,MAAM,UACNC,aAAa,UACbC,MAAO,CACLC,SAAU,OACVC,WAAY,MACZC,YAAa,QAEfC,IAAKR,OAUbrL,EAAAC,EAAAC,cAAA,OAAKgF,UAAU,gBACblF,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,CAAYC,MAAO,iBAAmB7E,GACpCJ,EAAAC,EAAAC,cAAC6H,EAAA,EAAD,CAAK7C,UAAU,gBACblF,EAAAC,EAAAC,cAAC8H,EAAA,EAAD,CAAKC,KAAM,IACTjI,EAAAC,EAAAC,cAACgI,EAAA,EAAD,CAAMjD,MAAO7E,EAAS,cACpBJ,EAAAC,EAAAC,cAACiI,EAAA,EAAD,CAAMC,SAAU9H,KAAK+E,cACnBrF,EAAAC,EAAAC,cAACiI,EAAA,EAAKE,KAAN,CACEC,eAAgBT,EAAgB,QAAU,GAC1CU,KAAMV,GAAiB,IAEtBH,EAAkB,WAAY,CAC7Bc,MAAO,CACL,CACEG,UAAU,EACV/C,QAAS,gCAJd8B,CAOE1H,EAAAC,EAAAC,cAAC0I,EAAA,EAAD,CAAOC,YAAY,WAAWC,WAAW,YAE9C9I,EAAAC,EAAAC,cAACiI,EAAA,EAAKE,KAAN,KACErI,EAAAC,EAAAC,cAAC6I,EAAA,EAAD,CACEC,KAAK,UACLC,SAAS,SACTC,UA7LH1B,EA6LuBG,IA5LjCrG,OAAO6H,KAAK3B,GAAa4B,KAAK,SAAAC,GAAK,OAAI7B,EAAY6B,OAyLxC,WASJrJ,EAAAC,EAAAC,cAAA,OACEuL,MAAO,CACLK,QAAS,OACTC,MAAO,OACPC,eAAgB,WAGjBZ,eAtMQ3K,aAqNZ6I,EAJoBC,IAAKC,OAAO,CAAEC,KAAM,oBAApBF,CACjCO,oBC5NamC,EAAA,0BACbjM,EAAAC,EAAAC,cAACgM,EAAA,EAAD,KACElM,EAAAC,EAAAC,cAACiM,EAAA,EAAD,KACEnM,EAAAC,EAAAC,cAACiM,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,WAAYlL,OAKxCmL,IAASC,OAAOxM,EAAAC,EAAAC,cAACuM,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.1578872d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { PasswordTest } from \"../index\";\n// import \"./App.css\";\n\nclass ClientPasswordTest extends Component {\n  render() {\n    return (\n      <PasswordTest\n        client=\"Email\"\n        hashedPassword={this.props.hashedPassword}\n        storeAttempts={this.props.storeAttempts}\n      />\n    );\n  }\n}\n\nexport default ClientPasswordTest;\n\n//site completion method\n","import React, { Component } from \"react\";\nimport { PasswordTest } from \"../index\";\n\nclass CarletonPasswordTest extends Component {\n  render() {\n    return (\n      <PasswordTest\n        client=\"Carleton\"\n        hashedPassword={this.props.hashedPassword}\n        storeAttempts={this.props.storeAttempts}\n      />\n    );\n  }\n}\n\nexport default CarletonPasswordTest;\n","import React, { Component } from \"react\";\nimport { PasswordTest } from \"../index\";\n\nclass FacebookPasswordTest extends Component {\n  render() {\n    return (\n      <PasswordTest\n        client=\"Facebook\"\n        hashedPassword={this.props.hashedPassword}\n        storeAttempts={this.props.storeAttempts}\n      />\n    );\n  }\n}\n\nexport default FacebookPasswordTest;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { PageHeader } from \"antd\";\nimport {\n  ClientPasswordConfirmation,\n  CarletonPasswordConfirmation,\n  FacebookPasswordConfirmation,\n  ClientPasswordTest\n} from \"../index\";\nimport {\n  CarletonPasswordTest,\n  FacebookPasswordTest\n} from \"../UserPasswordTests\";\n\nimport * as firebase from \"firebase\";\n\nvar config = {\n  apiKey: \"AIzaSyDuK3yBJJRWrrRJ_sTkMqDYZoTfbxGE6DI\",\n  authDomain: \"password-generator-e4e47.firebaseapp.com\",\n  databaseURL: \"https://password-generator-e4e47.firebaseio.com\",\n  projectId: \"password-generator-e4e47\",\n  storageBucket: \"password-generator-e4e47.appspot.com\",\n  messagingSenderId: \"723298110874\"\n};\n\nfirebase.initializeApp(config);\n\n// eslint-disable-next-line\nconst db = firebase.database();\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.attemptDetails = [];\n    this.dataSaved = false;\n    this.userId = Math.floor(Math.random() * 90000) + 10000;\n    this.state = {\n      currentScreen: 0,\n      emailHashedPassword: \"\",\n      carletonHashedPassword: \"\",\n      facebookHashedPassword: \"\"\n    };\n  }\n\n  componentDidUpdate() {\n    if (this.state.currentScreen >= 6 && !this.dataSaved) {\n      this.saveDataToFirebase();\n    }\n  }\n\n  saveDataToFirebase() {\n    this.dataSaved = true;\n    console.log(this.attemptDetails);\n\n    let totalLogins = 0;\n    let succesfulLogins = 0;\n    let failedLogins = 0;\n\n    let totalLoginTime = 0;\n    let succesfulLoginTime = 0;\n    let failedLoginTime = 0;\n\n    this.attemptDetails.forEach(attempt => {\n      let successfulAttempt = true;\n      if (attempt.attempt === \"success\") {\n        succesfulLogins += 1;\n        succesfulLoginTime += attempt.time;\n      } else {\n        failedLogins += 1;\n        failedLoginTime += attempt.time;\n        successfulAttempt = false;\n      }\n      totalLogins += 1;\n      totalLoginTime += attempt.time;\n      db.ref(\"attempts/\" + this.userId).set({\n        user_id: this.userId,\n        time: attempt.time,\n        success: successfulAttempt\n      });\n    });\n\n    let averageLoginTime = totalLoginTime / totalLogins;\n    let averageSuccesfulLoginTime = 0;\n    if (succesfulLogins) {\n      averageSuccesfulLoginTime = succesfulLoginTime / succesfulLogins;\n    }\n    let averageFailedLoginTime = 0;\n    if (failedLogins) {\n      averageFailedLoginTime = failedLoginTime / failedLogins;\n    }\n\n    db.ref(\"summaries/\" + this.userId).set({\n      user_id: this.userId,\n      total_logins: totalLogins,\n      successful_logins: succesfulLogins,\n      failed_logins: failedLogins,\n      average_success_time: averageSuccesfulLoginTime,\n      average_login_time: averageLoginTime,\n      average_failed_time: averageFailedLoginTime\n    });\n  }\n\n  nextScreen() {\n    const { currentScreen } = this.state;\n    this.setState({\n      currentScreen: currentScreen + 1\n    });\n  }\n\n  saveHashedPassword(hashedPassword) {\n    const { currentScreen } = this.state;\n    switch (currentScreen) {\n      case 0:\n        this.setState({\n          emailHashedPassword: hashedPassword,\n          currentScreen: currentScreen + 1\n        });\n        break;\n      case 1:\n        this.setState({\n          carletonHashedPassword: hashedPassword,\n          currentScreen: currentScreen + 1\n        });\n        break;\n      case 2:\n        this.setState({\n          facebookHashedPassword: hashedPassword,\n          currentScreen: currentScreen + 1\n        });\n        break;\n      default:\n        break;\n    }\n  }\n\n  saveAttempts(attemptDetails) {\n    attemptDetails.forEach(attemptDetail => {\n      this.attemptDetails.push(attemptDetail);\n    });\n\n    this.setState({\n      currentScreen: this.state.currentScreen + 1\n    });\n  }\n\n  render() {\n    const emailClient = (\n      <ClientPasswordConfirmation\n        confirmPassword={this.saveHashedPassword.bind(this)}\n      />\n    );\n\n    const carletonClient = (\n      <CarletonPasswordConfirmation\n        confirmPassword={this.saveHashedPassword.bind(this)}\n      />\n    );\n\n    const facebookClient = (\n      <FacebookPasswordConfirmation\n        confirmPassword={this.saveHashedPassword.bind(this)}\n      />\n    );\n\n    const emailTestClient = (\n      <ClientPasswordTest\n        hashedPassword={this.state.emailHashedPassword}\n        storeAttempts={this.saveAttempts.bind(this)}\n      />\n    );\n\n    const carletonTestClient = (\n      <CarletonPasswordTest\n        hashedPassword={this.state.carletonHashedPassword}\n        storeAttempts={this.saveAttempts.bind(this)}\n      />\n    );\n\n    const facebookTestClient = (\n      <FacebookPasswordTest\n        hashedPassword={this.state.facebookHashedPassword}\n        storeAttempts={this.saveAttempts.bind(this)}\n      />\n    );\n\n    const finalScreen = <PageHeader title=\"Thanks!\" />;\n\n    const allScreens = [\n      emailClient,\n      carletonClient,\n      facebookClient,\n      emailTestClient,\n      carletonTestClient,\n      facebookTestClient,\n      finalScreen\n    ];\n\n    const { currentScreen } = this.state;\n    return (\n      <div className=\"App\">\n        <PageHeader title={\"User ID: \" + this.userId}>\n          {allScreens[currentScreen]}\n        </PageHeader>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n//site completion method\n","import React, { Component } from \"react\";\nimport \"./PasswordConfirmation.css\";\nimport { PageHeader, Form, Card, Input, Button, Col, Row, message } from \"antd\";\nimport axios from \"axios\";\nimport { MD5 } from \"crypto-js\";\nfunction hasErrors(fieldsError) {\n  return Object.keys(fieldsError).some(field => fieldsError[field]);\n}\n\nconst wordsApiEndpoint = \"https://wordsapiv1.p.rapidapi.com\";\n\nclass PasswordConfirmation extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      client: this.props.client,\n      password: \"\",\n      hashed_password: \"\"\n    };\n    this.generatePassword();\n  }\n\n  generatePassword() {\n    const wordsApiHeaders = {\n      \"X-RapidAPI-Key\": \"550cee20f6msh253d7e0120b4dedp12fda9jsnf7740ee04a0c\",\n      \"X-RapidAPI-Host\": \"wordsapiv1.p.rapidapi.com\"\n    };\n    let wordsApiDefaultParams = {\n      random: \"true\",\n      partOfSpeech: \"adjective\",\n      frequencyMin: \"5\",\n      syllablesMin: \"2\",\n      syllablesMax: \"4\",\n      lettersMax: \"8\",\n      lettersMin: \"4\"\n    };\n    let password = \"\";\n    if (this.state.password !== \"\") {\n      return;\n    }\n    axios\n      .get(wordsApiEndpoint + \"/words/\", {\n        headers: wordsApiHeaders,\n        params: wordsApiDefaultParams\n      })\n      .then(value => {\n        password += value.data.word + \"-\";\n\n        wordsApiDefaultParams.partOfSpeech = \"verb\";\n        return axios.get(wordsApiEndpoint + \"/words/\", {\n          headers: wordsApiHeaders,\n          params: wordsApiDefaultParams\n        });\n      })\n      .then(value => {\n        password += value.data.word + \"-\";\n\n        wordsApiDefaultParams.partOfSpeech = \"verb\";\n        return axios.get(wordsApiEndpoint + \"/words/\", {\n          headers: wordsApiHeaders,\n          params: wordsApiDefaultParams\n        });\n      })\n      .then(value => {\n        password += value.data.word + \"-\";\n\n        wordsApiDefaultParams.partOfSpeech = \"adjective\";\n        return axios.get(wordsApiEndpoint + \"/words/\", {\n          headers: wordsApiHeaders,\n          params: wordsApiDefaultParams\n        });\n      })\n      .then(value => {\n        password += value.data.word + \"-\";\n\n        wordsApiDefaultParams.partOfSpeech = \"noun\";\n        return axios.get(wordsApiEndpoint + \"/words/\", {\n          headers: wordsApiHeaders,\n          params: wordsApiDefaultParams\n        });\n      })\n      .then(value => {\n        password += value.data.word;\n        this.setState({\n          password: password,\n          hashed_password: MD5(password).words\n        });\n      });\n\n    this.setState({\n      password: password,\n      hashed_password: MD5(password).words\n    });\n  }\n  componentDidMount() {\n    // To disabled submit button at the beginning.\n    this.props.form.validateFields();\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        message.success(this.props.client + \" Password Saved\");\n        this.props.confirmPassword(MD5(values.password));\n      }\n    });\n  };\n\n  correctPassword(rule, value, callback) {\n    if (!value) {\n      callback();\n    } else {\n      setTimeout(() => {\n        if (value !== this.state.password) {\n          callback([new Error(\"Password Doesnt Match\")]);\n        } else {\n          callback();\n        }\n      }, 1000);\n    }\n  }\n\n  render() {\n    const {\n      getFieldDecorator,\n      getFieldsError,\n      getFieldError,\n      isFieldTouched\n    } = this.props.form;\n\n    const passwordError =\n      isFieldTouched(\"password\") && getFieldError(\"password\");\n\n    const { client } = this.state;\n    return (\n      <div className=\"PasswordConfirmation\">\n        <PageHeader title={\"Password Creation \" + client}>\n          <Row className=\"PasswordForm\">\n            <Col span={14}>\n              <Card title={client + \" Password: \" + this.state.password}>\n                <Form onSubmit={this.handleSubmit}>\n                  <Form.Item\n                    validateStatus={passwordError ? \"error\" : \"\"}\n                    help={passwordError || \"\"}\n                  >\n                    {getFieldDecorator(\"password\", {\n                      rules: [\n                        {\n                          message: \"Password doesn't match\",\n                          validator: this.correctPassword.bind(this)\n                        },\n                        {\n                          required: true,\n                          message: \"Please input your password\"\n                        }\n                      ]\n                    })(<Input placeholder=\"Password\" spellCheck=\"false\" />)}\n                  </Form.Item>\n                  <Form.Item>\n                    <Button\n                      type=\"primary\"\n                      htmlType=\"submit\"\n                      disabled={hasErrors(getFieldsError())}\n                    >\n                      Confirm\n                    </Button>\n                  </Form.Item>\n                </Form>\n              </Card>\n            </Col>\n          </Row>\n        </PageHeader>\n      </div>\n    );\n  }\n}\n\nconst WrappedHorizontalLoginForm = Form.create({ name: \"horizontal_login\" })(\n  PasswordConfirmation\n);\n\nexport default WrappedHorizontalLoginForm;\n// export default PasswordConfirmation;\n\n/*\n       <div className=\"\">\n                <Icon\n                type=\"check-circle\"\n                theme=\"twoTone\"\n                twoToneColor=\"#52c41a\"\n                style={{ fontSize: \"32px\" }}\n                />\n                <Icon\n                type=\"close-circle\"\n                theme=\"twoTone\"\n                twoToneColor=\"#f5222d\"\n                style={{ fontSize: \"32px\" }}\n                />\n                <Icon type=\"minus-circle\" style={{ fontSize: \"32px\" }} />\n            </div>\n                */\n","import React, { Component } from \"react\";\nimport { PasswordConfirmation } from \"../index\";\n// import \"./App.css\";\n\nclass ClientPasswordConfirmation extends Component {\n  render() {\n    return (\n      <PasswordConfirmation\n        client=\"Email\"\n        confirmPassword={this.props.confirmPassword}\n      />\n    );\n  }\n}\n\nexport default ClientPasswordConfirmation;\n\n//site completion method\n","import React, { Component } from \"react\";\nimport { PasswordConfirmation } from \"../index\";\n// import \"./App.css\";\n\nclass CarletonPasswordConfirmation extends Component {\n  render() {\n    return (\n      <PasswordConfirmation\n        client=\"Carleton\"\n        confirmPassword={this.props.confirmPassword}\n      />\n    );\n  }\n}\n\nexport default CarletonPasswordConfirmation;\n\n//site completion method\n","import React, { Component } from \"react\";\nimport { PasswordConfirmation } from \"../index\";\n// import \"./App.css\";\n\nclass FacebookPasswordConfirmation extends Component {\n  render() {\n    return (\n      <PasswordConfirmation\n        client=\"Facebook\"\n        confirmPassword={this.props.confirmPassword}\n      />\n    );\n  }\n}\n\nexport default FacebookPasswordConfirmation;\n\n//site completion method\n","import React, { Component } from \"react\";\nimport {\n  PageHeader,\n  Form,\n  Card,\n  Input,\n  Button,\n  Col,\n  Row,\n  Icon,\n  message\n} from \"antd\";\nimport { MD5, enc } from \"crypto-js\";\nimport \"./PasswordTest.css\";\nfunction hasErrors(fieldsError) {\n  return Object.keys(fieldsError).some(field => fieldsError[field]);\n}\n\nclass PasswordTest extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      client: this.props.client,\n      hashedPassword: this.props.hashedPassword,\n      currentAttempt: 0,\n      attempts: [0, 0, 0],\n      attemptDetails: []\n    };\n  }\n\n  componentDidMount() {\n    // To disabled submit button at the beginning.\n    this.props.form.validateFields();\n    this.startTime = new Date();\n  }\n\n  compareHashedPassword(fieldHashedPassword) {\n    const { hashedPassword } = this.props;\n    const stringFieldHashedPassword = fieldHashedPassword.toString(enc.Hex);\n    const stringHashedPassword = hashedPassword.toString(enc.Hex);\n    if (stringHashedPassword === stringFieldHashedPassword) {\n      return true;\n    }\n    return false;\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { client, form } = this.props;\n    const currentField = form.getFieldValue(\"password\");\n    const hashedCurrentField = MD5(currentField);\n    const endTime = new Date();\n    const deltaTime = endTime - this.startTime;\n    if (!this.compareHashedPassword(hashedCurrentField)) {\n      this.props.form.setFields({\n        // eslint-disable-next-line\n        [\"password\"]: { value: \"\" }\n      });\n\n      message.error(\"Wrong Password\");\n\n      let newAttempts = this.state.attempts;\n      newAttempts[this.state.currentAttempt] = -1;\n\n      let newAttemptDetails = this.state.attemptDetails;\n      newAttemptDetails.push({\n        attempt: \"failure\",\n        time: deltaTime\n      });\n      this.setState({\n        attempts: newAttempts,\n        currentAttempt: this.state.currentAttempt + 1,\n        attemptDetails: newAttemptDetails\n      });\n\n      if (this.state.currentAttempt >= 2) {\n        const { storeAttempts } = this.props;\n        const { attemptDetails } = this.state;\n        setTimeout(function() {\n          storeAttempts(attemptDetails);\n        }, 1000);\n      }\n\n      this.startTime = new Date();\n      return;\n    }\n\n    form.validateFields((err, values) => {\n      if (!err) {\n        let newAttempts = this.state.attempts;\n        newAttempts[this.state.currentAttempt] = 1;\n\n        let newAttemptDetails = this.state.attemptDetails;\n        newAttemptDetails.push({\n          attempt: \"success\",\n          time: deltaTime\n        });\n\n        this.setState({\n          attempts: newAttempts,\n          currentAttempt: this.state.currentAttempt + 1,\n          attemptDetails: newAttemptDetails\n        });\n        message.success(client + \" Password Correct\");\n        const { storeAttempts } = this.props;\n        const { attemptDetails } = this.state;\n        setTimeout(function() {\n          storeAttempts(attemptDetails);\n        }, 1000);\n      }\n    });\n  };\n\n  render() {\n    const {\n      getFieldDecorator,\n      getFieldsError,\n      getFieldError,\n      isFieldTouched\n    } = this.props.form;\n\n    const passwordError =\n      isFieldTouched(\"password\") && getFieldError(\"password\");\n    const { client, attempts } = this.state;\n\n    let iconsTracker = [];\n\n    attempts.forEach((attempt, index) => {\n      switch (attempt) {\n        case -1:\n          iconsTracker[index] = (\n            <Icon\n              type=\"close-circle\"\n              theme=\"twoTone\"\n              twoToneColor=\"#f5222d\"\n              style={{\n                fontSize: \"32px\",\n                marginLeft: \"10x\",\n                marginRight: \"10px\"\n              }}\n              key={index}\n            />\n          );\n          break;\n\n        case 0:\n          iconsTracker[index] = (\n            <Icon\n              type=\"minus-circle\"\n              style={{\n                fontSize: \"32px\",\n                marginLeft: \"10x\",\n                marginRight: \"10px\"\n              }}\n              key={index}\n            />\n          );\n          break;\n\n        case 1:\n          iconsTracker[index] = (\n            <Icon\n              type=\"check-circle\"\n              theme=\"twoTone\"\n              twoToneColor=\"#52c41a\"\n              style={{\n                fontSize: \"32px\",\n                marginLeft: \"10x\",\n                marginRight: \"10px\"\n              }}\n              key={index}\n            />\n          );\n          break;\n        default:\n          break;\n      }\n    });\n\n    return (\n      <div className=\"PasswordTest\">\n        <PageHeader title={\"Password Test \" + client}>\n          <Row className=\"PasswordForm\">\n            <Col span={14}>\n              <Card title={client + \" Password \"}>\n                <Form onSubmit={this.handleSubmit}>\n                  <Form.Item\n                    validateStatus={passwordError ? \"error\" : \"\"}\n                    help={passwordError || \"\"}\n                  >\n                    {getFieldDecorator(\"password\", {\n                      rules: [\n                        {\n                          required: true,\n                          message: \"Please input your password\"\n                        }\n                      ]\n                    })(<Input placeholder=\"Password\" spellCheck=\"false\" />)}\n                  </Form.Item>\n                  <Form.Item>\n                    <Button\n                      type=\"primary\"\n                      htmlType=\"submit\"\n                      disabled={hasErrors(getFieldsError())}\n                    >\n                      Check\n                    </Button>\n                  </Form.Item>\n                </Form>\n                <div\n                  style={{\n                    display: \"flex\",\n                    width: \"100%\",\n                    justifyContent: \"center\"\n                  }}\n                >\n                  {iconsTracker}\n                </div>\n              </Card>\n            </Col>\n          </Row>\n        </PageHeader>\n      </div>\n    );\n  }\n}\n\nconst WrappedHorizontalLoginForm = Form.create({ name: \"horizontal_login\" })(\n  PasswordTest\n);\n\nexport default WrappedHorizontalLoginForm;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"antd/dist/antd.css\";\nimport { App } from \"./components\";\n\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\n\nexport default () => (\n  <HashRouter>\n    <Switch>\n      <Route exact path=\"/\" components={App} />\n    </Switch>\n  </HashRouter>\n);\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// serviceWorker.unregister();\n"],"sourceRoot":""}